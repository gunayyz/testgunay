User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ pwd
/c/Users/User/Desktop

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd
.git/        README.md    desktop.ini  folder1/     testing/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd
.git/        README.md    desktop.ini  folder1/     testing/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd
.git/        README.md    desktop.ini  folder1/     testing/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd
.git/        README.md    desktop.ini  folder1/     testing/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd
.git/        README.md    desktop.ini  folder1/     testing/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop (main)
$ cd folder1/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ touch index.html

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ git config --user.name "gunayyz"
error: unknown option `user.name'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-patt
ern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pa
ttern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, com
mand line)
    --show-scope          show scope of config (worktree, local, global, system,
 command)
    --default <value>     with --get, use default value when missing entry


User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ git config -- global user.name "gunayyz"
error: key does not contain a section: global

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$  git config --global user.name "gunayyz"

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ git config --global user.email "7cgq295@code.edu.az"

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ git add .

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ git init
Initialized empty Git repository in C:/Users/User/Desktop/folder1/.git/

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (master)
$ git commit -m "first commit"
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        index.html

nothing added to commit but untracked files present (use "git add" to track)

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (master)
$ git add index.html

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (master)
$ git commit -m "first commit"
[master (root-commit) 7d363c1] first commit
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 index.html

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (master)
$ git branch -M main

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ git remote add origin https://github.com/gunayyz/new.git

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$ git push -u origin main
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 211 bytes | 211.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/gunayyz/new.git
 * [new branch]      main -> main
branch 'main' set up to track 'origin/main'.

User@DESKTOP-FDAHQH0 MINGW64 ~/Desktop/folder1 (main)
$
